name: Deploy Flask App to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Save EC2 SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | sed 's/\\n/\n/g' > cicd_keypair.pem
          chmod 600 cicd_keypair.pem

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -i cicd_keypair.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo SSH connection successful"

      - name: SSH into EC2 and deploy Docker container
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd flask-nginx-docker
            docker-compose down
            docker-compose up -d --build

      - name: Restart Nginx on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i cicd_keypair.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "sudo systemctl restart nginx"

